PForth V2.0.2, LE/64, built Apr 11 2024 18:54:19 (static)

words ;;;;      AUTO.INIT       SDAD    IS.LITTLE.ENDIAN?       
SDAD.DEFINE     SDAD.DUMP.DATA  SDAD.DUMP.HEX.BYTE,     
SDAD.DUMP.HEX.BYTE      SDAD.DUMP.HEX,  SDAD.DUMP.HEX   
SDAD.OPEN       SDAD.CLOSE      (U2.)   (U8.)   
$SDAD.LINE      SDAD.TYPE       SDAD.EMIT       
SDAD.FLUSH      SDAD-BUFFER-FID SDAD-BUFFER-INDEX       
SDAD-BUFFER     SDAD_BUFFER_SIZE        SDAD_CODE_EXTRA 
SDAD_NAMES_EXTRA        TASK-SAVE_DIC_AS_DATA   
::::../../fth/savedicd.fth      ;;;;    ;;;;    
;;;;    AUTO.TERM       AUTO.INIT       HISTORY.OFF     
HISTORY.ON      HISTORY.RESET   XX      HISTORY 
HISTORY#        TASK-HISTORY.FTH        ::::history.fth 
;;;;    BACKSPACE       BELL    TIO.ERASE.EOL   
TIO.FORWARDS    TIO.BACKWARDS   CLS     ESC[    
ASCII_CTRL_X    ASCII_CTRL_E    ASCII_CTRL_A    
ASCII_ESCAPE    ASCII_DELETE    ASCII_BACKSPACE 
TASK-TERMIO.FTH ::::termio.fth  ;;;;    TRACE.HELP      
G       GD      TRACE.USER      SM      SD      
S       TRACE   TRACE_LEVEL_MAX TRACE_LEVEL     
TRACE_IP        IS.PRIMITIVE?   SPACE.TO.COLUMN 
TASK-TRACE.FTH  ::::trace.fth   ;;;;    WORDS.LIKE      
PARTIAL.MATCH.NAME      TASK-WORDSLIK.FTH       
::::wordslik.fth        ;;;;    SEE     CODE_CELL       
CODE@   BYTE_CODE       .XT     TASK-SEE.FTH    
::::see.fth     ;;;;    FILE?   FINDNFA.FROM    
F?.SEARCH.NFA   BEW!    BEW@    BE!     BE@     
TASK-FILEFIND.FTH       ::::filefind.fth        
;;;;    +LOOP   LOOP    UNTIL   REPEAT  THEN    
BEGIN   ?DO     DO      IF      }SMIF   SMIF{   
SMIF-DEPTH      SMIF-XT TASK-SMART_IF.FTH       
::::smart_if.fth        ;;;;    FS@     FS!     
(S+F@)  (S+F!)  FLPT    S@      (S@)    COMPILE+@BYTES  
(S+W@)  (S+C@)  (S+REL@)        (S+@)   (S+UW@) 
(S+UC@) @BYTES  S!      (S!)    !BYTES  COMPILE+!BYTES  
(S+REL!)        (S+!)   (S+W!)  (S+C!)  ..      
;STRUCT :STRUCT <:STRUCT>       TASK-C_STRUCT   
::::c_struct.fth        ;;;;    STRUCT  ULONG   
RPTR    APTR    USHORT  UBYTE   LONG    SHORT   
BYTE    BYTES   SIZEOF()        OB.STATS?       
OB.STATS        OB.FINDIT       OB.MEMBER       
}UNION  }UNION{ UNION{  OB.MAKE.MEMBER  OB.SIZE,        
OB.SIZE@        OB.OFFSET,      OB.OFFSET@      
OB_OFFSET_SIZE  -CELL   CELL_MASK       OB_DEF_STRUCT   
OB_DEF_CLASS    OB-CURRENT-CLASS        OB-STATE        
FIND.BODY       TASK-MEMBER.FTH ::::member.fth  
;;;;    FP.INIT FP.TERM FP-IF-INIT      FP.OLD.NUMBER?  
(FP.NUMBER?)    NUM_TYPE_FLOAT  >FLOAT  FP-REQUIRE-E    
F.S     F.      (F.)    FG.     (FG.)   FE.     
(FE.)   FS.     (FS.)   FP.REPRESENT    (EXP.)  
FP.MOVE.DECIMAL FP.APPEND.ZEROS FP.STRIP.TRAILING.ZEROS 
FP.APPEND       FP.HOLD FP-OUTPUT-PTR   FP-OUTPUT-PAD   
FP-REPRESENT-PAD        FP_OUTPUT_SIZE  FP_REPRESENT_SIZE       
SET-PRECISION   PRECISION       FP_PRECISION_MAX        
FP-PRECISION    REPRESENT       FVAR-REP        
F~      (F.EXACTLY)     F>S     S>F     FFIELD: 
F0SP    FCONSTANT       FVARIABLE       FCREATE 
FALIGN.CREATE   CREATE_SIZE     FP-CREATE-SIZE  
FALIGN  FALIGNED        TASK-FLOATS.FTH ::::floats.fth  
;;;;    S\"     TASK-SLASHQT.FTH        ::::slashqt.fth 
;;;;    REQUIRE REQUIRED        ::::require.fth 
;;;;    FILE-STATUS     (       RESIZE-FILE     
RESIZE-FILE-LIMIT       RENAME-FILE     WRITE-LINE      
READ-LINE       ::::file.fth    ;;;;    RESTORE-INPUT   
SAVE-INPUT      TASK-SAVE-INPUT.FTH     ::::save-input.fth      
;;;;    ENVIRONMENT?    SEARCH  MAP     UNUSED  
TIB     EXPECT  SPAN    QUERY   BLANK   ERASE   
MOVE    WITHIN  W->S    B->S    .HEX    .DEC    
.BIN    ARRAY   WARRAY  BARRAY  -2SORT  2SORT   
WCHOOSE CHOOSE  RANDOM  RAND-SEED       SHIFT   
MS      MSEC    (MSEC)  (MSEC.SPIN)     MSEC-DELAY      
?       IF-DEBUG        'C      ?LITERAL        
'N      TASK-MISC2.FTH  ::::misc2.fth   ;;;;    
[UNDEFINED]     [DEFINED]       EXISTS? [THEN]  
[IF]    [ELSE]  TASK-CONDCOMP.FTH       ::::condcomp.fth        
;;;;    */      */MOD   MOD     /MOD    SM/REM  
FM/MOD  TASK-MATH.FTH   ::::math.fth    ;;;;    
TLV2    TLV1    {       TASK-LOCALS.FTH ::::locals.fth  
;;;;    DOES>   EXIT    ;       :       +->     
->      TO      VALUE   (LOCAL) TASK-ANSILOCS.FTH       
::::ansilocs.fth        ;;;;    PRIVATIZE       
}PRIVATE        PRIVATE{        PRIVATE-STOP    
PRIVATE-START   TASK-PRIVATE.FTH        ::::private.fth 
;;;;    TEXTROM $ROM    ($ROM)  $APPEND.CHAR    
INDEX   $MATCH? TEXT=?  TEXT=   $=      $ARRAY  
-TRAILING       TASK-STRINGS.FTH        ::::strings.fth 
;;;;    CFIELD: FIELD:  +FIELD  END-STRUCTURE   
BEGIN-STRUCTURE TASK-STRUCTURE.FTH      ::::structure.fth       
;;;;    ENDCASE ENDOF   RANGEOF (RANGEOF?)      
OF      ?OF     CASE    OF-DEPTH        CASE-DEPTH      
TASK-CASE       ::::case.fth    ;;;;    \S      
EVALUATE        TOLOWER @EXECUTE        >NAME   
CLOSEST-XT      CLOSEST-NFA     VLIST   WORDS   
FLAG_SMUDGE     TAB     TAB-WIDTH       .HX     
$       PAGE    CLS     CR?     #COLS   ?PAUSE  
ABORT"  (ABORT")        WARNING"        (WARNING")      
<<      >>      TASK-MISC1.FTH  ::::misc1.fth   
;;;;    .R      .       (.)     U.R     U.      
(U.)    D.R     D.      (D.)    UD.R    UD.     
(UD.)   #S      #       SIGN    #>      <#      
HOLD    HLD     (NUMBER?)       ((NUMBER?))     
(>NUMBER-WITH-BASE)     NUM_TYPE_DOUBLE NUM_TYPE_SINGLE 
NUM_TYPE_BAD    CONVERT >NUMBER DIGIT   TASK-NUMBERIO.FTH       
::::numberio.fth        ;;;;    MARKER  ANEW    
FORGET  [FORGET]        IF.FORGOTTEN    LAST-FORGET     
(FORGET)        VERIFY.FORGET   FORGET.NFA      
FREEZE  RFENCE  ::::forget.fth  ::::loadp4th.fth        
TURNKEY SAVE-FORTH      AUTO.INIT       CODE-SIZE       
HEADERS-SIZE    INCLUDE?        RI      INCLUDE 
INCLUDE-SAVE-NAME       $INCLUDE        MAP.FILENAME    
INCLUDED        INCLUDE.MARK.END        INCLUDE.MARK.START      
TRACE-INCLUDE   AUTO.TERM       AUTO.INIT       
POSTPONE        $APPEND SLITERAL        ""      
P"      "       S"      C"      .'      ."      
.(      ,"      ",      (.")    (S")    (C")    
EVEN    'WORD   $TYPE   [CHAR]  CHAR    ASCII   
LWORD   PARSE   PARSE-WORD      PLACE   /STRING 
WHAT'S  (WHAT'S)        IS      (IS)    >IS     
CHECK.DEFER     >NEWLINE        0SP     SPACES  
SPACE   RECURSE UNLOOP  +LOOP   LOOP    LOOP-BACK       
LOOP-FORWARD    LEAVE   ?DO     DO      ?DO_FLAG        
LEAVE_FLAG      DO_FLAG 0USP    US@     US>     
>US     USTACK  0STACKP STACKP  STACK.PICK      
STACK@  STACK>  >STACK  :STACK  A,      A@      
A!      IF.REL->USE     IF.USE->REL     BL      
TRUE    FALSE   D>      D<      D=      D2*     
2/      2*      MOD     /MOD    D>S     S>D     
DABS    ABS     2CONSTANT       2@      2!      
-2      -1      CONSTANT        2VARIABLE       
VARIABLE        DOES>   (DOES>) [']     REPEAT  
WHILE   ELSE    AHEAD   UNTIL   AGAIN   BEGIN   
THEN    IF      ?PAIRS  ?COMP   <RESOLVE        
<MARK   >RESOLVE        >MARK   ?CONDITION      
CONDITIONAL_KEY ABORT   ERR_DEFER       ERR_PAIRS       
ERR_EXECUTING   ERR_ABORTQ      ERR_ABORT       
:NONAME COMPILE (COMPILE)       [COMPILE]       
COMPILE,        X!      X@      REL->USE        
USE->REL        BODY>   >BODY   N>LINK  CODE>   
>CODE   NAMEBASE+       CODELIMIT       NAMELIMIT       
CODEBASE        NAMEBASE        N>NEXTLINK      
,       W,      C,      ALLOT   ALIGN   ALIGNED 
EVEN-UP ]       [       BETWEEN $MOVE   PAD     
BINARY  HEX     OCTAL   DECIMAL ID.     DNEGATE 
NEGATE  NOT     INVERT  >=      <=      TUCK    
NIP     2DROP   3DUP    -ROT    CHARS   CHAR+   
CELL*   CELL-   CELL+   OFF     ON      COUNT   
\       (       IMMEDIATE       FLAG_IMMEDIATE  
LATEST  FIRST_COLON     ::::system.fth  CTEST1  
CTEST0  0BRANCH XOR     W!      W@      WORD    
VERSION_CODE    >IN     STATE   OUT     TRACE-STACK     
TRACE-LEVEL     TRACE-FLAGS     RETURN-CODE     
#TIB    HEADERS-LIMIT   HEADERS-BASE    HEADERS-PTR     
ECHO    DP      CONTEXT CODE-LIMIT      CODE-BASE       
BYE-CODE        BASE    TYPE    >R      THROW   
*       '       TEST2   TEST1   SWAP    SOURCE-LINE-NUMBER!     
SOURCE-LINE-NUMBER@     POP-SOURCE-ID   PUSH-SOURCE-ID  
SOURCE-ID       SET-SOURCE      SOURCE  (SLEEP) 
SKIP    SCAN    (SAVE-FORTH)    !       SP!     
SP@     ;       RP!     RP@     R>      R@      
RDROP   RSHIFT  ROT     ROLL    RESIZE  REFILL  
KEY?    ?TERMINAL       ?DUP    (?DO)   QUIT    
(QUIT)  +!      (+LOOP) +       PICK    OVER    
OR      NUMBER? NOOP    PREVNAME        NAME>   
-       MIN     MAX     LSHIFT  (LOOP)  (LOCAL+!)       
(8_LOCAL!)      (7_LOCAL!)      (6_LOCAL!)      
(5_LOCAL!)      (4_LOCAL!)      (3_LOCAL!)      
(2_LOCAL!)      (1_LOCAL!)      (LOCAL!)        
(8_LOCAL@)      (7_LOCAL@)      (6_LOCAL@)      
(5_LOCAL@)      (4_LOCAL@)      (3_LOCAL@)      
(2_LOCAL@)      (1_LOCAL@)      (LOCAL@)        
(LOCAL.EXIT)    (LOCAL.ENTRY)   LOCAL-COMPILER  
LOADSYS (LITERAL)       LITERAL (LEAVE) KEY     
INCLUDE-FILE    J       INTERPRET       I       
(SNUMBER?)      HERE    FPICK   FTANH   FTAN    
FSQRT   FSINH   FSINCOS FSIN    FLOG    FLNP1   
FLN     FCOSH   FCOS    FATANH  FATAN2  FATAN   
FASINH  FASIN   FALOG   FACOSH  FACOS   FABS    
F**     FSWAP   FROUND  FROT    FOVER   FNEGATE 
FMIN    FMAX    FLOOR   FLOATS  FLOAT+  (FLITERAL)      
FLITERAL        FDUP    FDROP   FDEPTH  F@      
F>D     F<      F0=     F0<     F/      F-      
F+      F*      F!      D>F     FREE    FLUSHEMIT       
FINDNFA BIN     W/O     R/W     R/O     (RESIZE-FILE)   
(RENAME-FILE)   FLUSH-FILE      REPOSITION-FILE 
FILE-POSITION   WRITE-FILE      FILE-SIZE       
READ-FILE       CLOSE-FILE      OPEN-FILE       
DELETE-FILE     CREATE-FILE     FIND    FILL    
@       EXECUTE ?ERROR  (?ERROR)        EOL     
EMIT    (EMIT)  DUP     DUMP    DROP    (DO)    
.S      .       /       DEPTH   C!      DEFER   
UM*     M*      MU/MOD  UM/MOD  D-      D+      
(CREATE)        CREATE  CR      0<      0>      
0<>     0=      U<      <       U>      >       
<>      =       COMPARE (:)     :       CMOVE>  
CMOVE   C@      CELLS   CELL    CATCH   BYE     
BODY_OFFSET     BRANCH  BAIL    AND     ARSHIFT 
ALLOCATE        (ALITERAL)      ALITERAL        
ACCEPT  (ACCEPT)        2SWAP   2OVER   2+      
2-      (2LITERAL)      2LITERAL        2DUP    
2>R     2R>     2R@     1+      1-      EXIT    

885  words
   ok
Stack<10> 
bye 
